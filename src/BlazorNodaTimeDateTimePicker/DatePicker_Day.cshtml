@using NodaTime

<div class="day-wrapper">
	<div class="@ClassAttribute" onclick="@OnClick">
		@Date.Day
	</div>
</div>

@functions {
	[Parameter] protected LocalDate Date { get; set; }		
	[Parameter] protected bool Disabled { get; set; }
	[Parameter] protected DatePickerState State { get; set; }

	bool IsToday => Date == State.Today;
	
	private void OnClick()
	{
		if (!Disabled)
			State.SetSelectedDate(Date);
	}

	private bool IsOld => Date.Month < State.MonthToDisplay.Month;
	private bool IsNew => Date.Month > State.MonthToDisplay.Month;

	private string ClassAttribute
	{
		get
		{
			var sb = new List<string>();
			sb.Add("day");
			sb.Add(Date.DayOfWeek.IsWeekday() ? "weekday" : "weekend");
			if (IsOld)
				sb.Add("old");
			if (IsNew)
				sb.Add("new");
			if (IsToday)
				sb.Add("today");
			if (State.SelectedDate == Date)
				sb.Add("active");
			if (Disabled)
				sb.Add("disabled");

			return string.Join(" ", sb);
		}
	}
}