@using NodaTime

<div class="months">
	<div class="@ClassName(1)" onclick="@JanClicked">Jan</div>
	<div class="@ClassName(2)" onclick="@FebClicked">Feb</div>
	<div class="@ClassName(3)" onclick="@MarClicked">Mar</div>
	<div class="@ClassName(4)" onclick="@AprClicked">Apr</div>
	<div class="@ClassName(5)" onclick="@MayClicked">May</div>
	<div class="@ClassName(6)" onclick="@JunClicked">Jun</div>
	<div class="@ClassName(7)" onclick="@JulClicked">Jul</div>
	<div class="@ClassName(8)" onclick="@AugClicked">Aug</div>
	<div class="@ClassName(9)" onclick="@SepClicked">Sep</div>
	<div class="@ClassName(10)" onclick="@OctClicked">Oct</div>
	<div class="@ClassName(11)" onclick="@NovClicked">Nov</div>
	<div class="@ClassName(12)" onclick="@DecClicked">Dec</div>
</div>

@functions {
	[Parameter] protected DatePickerState State { get; set; }

	bool[] disabled;

	protected override void OnInit()
	{
		State.OnYearToDisplayChanged += Render;

		Render();
	}

	void Render()
	{
		disabled = new bool[12];

		for (int i = 0; i < 12; i++)
		{
			disabled[i] = State.IsMonthDisabled(i + 1, State.MonthToDisplay.Year);
		}
	}

	void _onSelected(int month)
	{
		if (disabled[month - 1] == false)
		{
			State.SetDisplayMonth(month);
			State.PreviousViewMode();
		}
	}

	protected string ClassName(int month)
	{
		var strClass = "month";

		// Disabled
		if (disabled[month - 1])
			strClass += " disabled";

		// Active
		if ((State.SelectedMonth.HasValue && month == State.SelectedMonth.Value)
			&& (State.SelectedYear == State.MonthToDisplay.Year))
			strClass += " active";

		return strClass;
	}

	void JanClicked()
	{
		_onSelected(1);
	}
	void FebClicked()
	{
		_onSelected(2);
	}
	void MarClicked()
	{
		_onSelected(3);
	}
	void AprClicked()
	{
		_onSelected(4);
	}
	void MayClicked()
	{
		_onSelected(5);
	}
	void JunClicked()
	{
		_onSelected(6);
	}
	void JulClicked()
	{
		_onSelected(7);
	}
	void AugClicked()
	{
		_onSelected(8);
	}
	void SepClicked()
	{
		_onSelected(9);
	}
	void OctClicked()
	{
		_onSelected(10);
	}
	void NovClicked()
	{
		_onSelected(11);
	}
	void DecClicked()
	{
		_onSelected(12);
	}
}