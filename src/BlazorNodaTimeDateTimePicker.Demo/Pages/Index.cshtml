@page "/"
@using NodaTime;

<h3>Blazor NodaTime Date Picker</h3>

<hr />
<h3>Inline</h3>

<div style="width: 250px;">
	<DatePicker Inline=true Changed=changed1 />
</div>

<pre>
<code class="html">
	@string1
</code>
</pre>
<hr />
<h3>Bound to Input</h3>

<input type="text" onfocus="@focussed" value=@selectedDate2 />
<DatePicker Visible="datePicker2Visible" Selected="selected2" Width="250px" FormatProvider=FormatProvider DisplayDaysOfWeek=false />

<p>
	@selectedDate2
</p>

<hr />
<h3>First Day of Week</h3>

<hr />
<h3>Display Days of Week</h3>

<hr />
<h3>Localisation</h3>

<hr />
<h3>Selected Date</h3>

<hr />
<h3>Min. Date</h3>

<hr />
<h3>Max. Date</h3>

<hr />
<h3>Disabled Dates</h3>

<hr />
<h3>Enabled Dates</h3>

<hr />
<h3>Days of Week Disabled</h3>

<hr />
<h3>Disabled Date Intervals</h3>

<hr />
<h3>Day View Header Format</h3>

<hr />
<h3>Month View Header Format</h3>

<hr />
<h3>Show Today</h3>

<hr />
<h3>Show Clear</h3>

<hr />
<h3>Events</h3>

@functions {
	System.Globalization.CultureInfo FormatProvider = new System.Globalization.CultureInfo("fr-FR");

	LocalDate MinDate = new LocalDate(2018, 9, 29);

	string string1 = "<DatePicker Inline=true />";

	LocalDate? selectedDate1;
	void changed1(LocalDate? localDate)
	{
		selectedDate1 = localDate;

		StateHasChanged();
	}

	void selected1(LocalDate localDate)
	{	
		selectedDate1 = localDate;

		StateHasChanged();
	}

	void cleared1()
	{		
		selectedDate1 = null;
		StateHasChanged();
	}

	LocalDate? selectedDate2;

	bool datePicker2Visible = false;
	void focussed(UIFocusEventArgs e)
	{
		datePicker2Visible = true;
	}

	void selected2(LocalDate localDate)
	{
		selectedDate2 = localDate;
		datePicker2Visible = false;

		StateHasChanged();
	}
}